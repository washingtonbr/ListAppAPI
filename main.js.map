{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/components.module.ts","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.scss","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/page-wrapper/page-wrapper.component.html","webpack:///./src/app/components/page-wrapper/page-wrapper.component.scss","webpack:///./src/app/components/page-wrapper/page-wrapper.component.ts","webpack:///./src/app/configs/interceptor.module.ts","webpack:///./src/app/configs/routes.ts","webpack:///./src/app/pages/auth/auth.component.html","webpack:///./src/app/pages/auth/auth.component.scss","webpack:///./src/app/pages/auth/auth.component.ts","webpack:///./src/app/pages/auth/auth.module.ts","webpack:///./src/app/pages/home/home.component.html","webpack:///./src/app/pages/home/home.component.scss","webpack:///./src/app/pages/home/home.component.ts","webpack:///./src/app/pages/home/home.module.ts","webpack:///./src/app/pages/list/list.component.html","webpack:///./src/app/pages/list/list.component.scss","webpack:///./src/app/pages/list/list.component.ts","webpack:///./src/app/pages/list/list.module.ts","webpack:///./src/app/pages/panel/panel.component.html","webpack:///./src/app/pages/panel/panel.component.scss","webpack:///./src/app/pages/panel/panel.component.ts","webpack:///./src/app/pages/panel/panel.module.ts","webpack:///./src/app/services/auth/auth-guard.service.ts","webpack:///./src/app/services/auth/auth.service.ts","webpack:///./src/app/services/list/list.service.ts","webpack:///./src/app/services/user/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\\n\\n<component-footer></component-footer>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'front-end';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { appRoutes } from './configs/routes';\nimport { ComponentsModule } from './components/components.module';\nimport { HomeModule } from './pages/home/home.module';\nimport { AuthModule } from './pages/auth/auth.module';\nimport { PanelModule } from './pages/panel/panel.module';\nimport { ListModule } from './pages/list/list.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Interceptor } from './configs/interceptor.module';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ComponentsModule,\n    HomeModule,\n    AuthModule,\n    PanelModule,\n    ListModule,\n    RouterModule.forRoot(appRoutes, { enableTracing: true }),\n    Interceptor,\n    HttpClientModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: () => {\n          return localStorage.getItem('token');\n        }\n      }\n    })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { FooterComponent } from './footer/footer.component';\nimport { PageWrapperComponent } from './page-wrapper/page-wrapper.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FontAwesomeModule\n  ],\n  declarations: [\n    FooterComponent,\n    PageWrapperComponent\n  ],\n  exports: [\n    FooterComponent,\n    PageWrapperComponent\n  ]\n})\nexport class ComponentsModule { }\n","module.exports = \"<footer class=\\\"footer\\\">\\n  <div class=\\\"content has-text-centered\\\">\\n    <p>\\n      <strong>ListApp</strong> by <a target=\\\"_blank\\\" href=\\\"https://github.com/washingtonbr/ListApp\\\">Washington Pires</a>. Source code licensed <a target=\\\"_blank\\\" href=\\\"https://github.com/washingtonbr/ListApp/blob/master/LICENSE\\\">GNU GPL v3.0</a>.\\n    </p>\\n\\n    <a target=\\\"_blank\\\" href=\\\"https://bulma.io\\\">\\n      <img src=\\\"../../../assets/images/made-with-bulma.png\\\" alt=\\\"Made with Bulma\\\" width=\\\"110\\\">\\n    </a>\\n  </div>\\n</footer>\\n\"","module.exports = \".footer {\\n  padding: 1.5rem;\\n  background: #ffffff;\\n  border-top: 1px solid #fafafa;\\n  font-size: 12px; }\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'component-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent { }\n","module.exports = \"<section class=\\\"hero is-info is-fullheight\\\">\\n  <div class=\\\"hero-head\\\" [ngClass]=\\\"{'is-hidden-mobile': !headerOnMobile}\\\">\\n    <header class=\\\"navbar\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"navbar-brand\\\">\\n          <a class=\\\"navbar-item is-active\\\">\\n            <img src=\\\"../../../assets/images/logo-white.png\\\" alt=\\\"ListApp.me\\\">\\n          </a>\\n\\n          <span class=\\\"navbar-burger burger\\\">\\n            <span></span>\\n            <span></span>\\n            <span></span>\\n          </span>\\n        </div>\\n\\n        <div class=\\\"navbar-menu\\\">\\n          <div class=\\\"navbar-end\\\">\\n            <span *ngFor=\\\"let menuItem of menu\\\" class=\\\"navbar-item\\\">\\n              <a (click)=\\\"menuItem.onClick()\\\"\\n                class=\\\"button is-info\\\"\\n                [ngClass]=\\\"{'is-active': menuItem.isActive, 'is-inverted': menuItem.isInverted}\\\">\\n                <span class=\\\"icon\\\">\\n                  <fa-icon [icon]=\\\"menuItem.icon\\\"></fa-icon>\\n                </span>\\n                <span>{{menuItem.text}}</span>\\n              </a>\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n    </header>\\n  </div>\\n\\n  <div class=\\\"hero-body\\\">\\n    <div class=\\\"container\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \".hero {\\n  background: url('bg.jpg') repeat center; }\\n\"","import { Component, Input } from '@angular/core';\nimport { Menu } from '../../interfaces/menu.interface';\n\n@Component({\n  selector: 'component-page-wrapper',\n  templateUrl: './page-wrapper.component.html',\n  styleUrls: ['./page-wrapper.component.scss']\n})\nexport class PageWrapperComponent {\n  @Input() menu: Menu[];\n  @Input() headerOnMobile: boolean = true;\n}\n","import { Injectable, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\n@Injectable()\nexport class HttpsRequestInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler,\n  ): Observable<HttpEvent<any>> {\n    const token = localStorage.getItem('token');\n    const newReq = req.clone({\n      headers: req.headers.set('x-access-token', token),\n    });\n\n    return next.handle(newReq);\n  }\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpsRequestInterceptor,\n      multi: true,\n    },\n  ],\n})\n\nexport class Interceptor {}\n","import { Routes } from '@angular/router';\nimport { AuthGuardService } from '../services/auth/auth-guard.service';\n\nimport { HomeComponent } from \"../pages/home/home.component\";\nimport { AuthComponent } from '../pages/auth/auth.component';\nimport { PanelComponent } from '../pages/panel/panel.component';\nimport { ListComponent } from '../pages/list/list.component';\n\nexport const appRoutes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path: 'auth',\n    component: AuthComponent\n  },\n  {\n    path: 'panel',\n    component: PanelComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'list/:id',\n    component: ListComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'new-list',\n    component: ListComponent,\n    canActivate: [AuthGuardService]\n  }\n];\n","module.exports = \"<component-page-wrapper\\n  [menu]=\\\"menu\\\"\\n  [headerOnMobile]=\\\"false\\\">\\n  <div class=\\\"has-text-centered\\\">\\n    <img class=\\\"logo is-hidden-tablet\\\" src=\\\"../../../assets/images/logo-white.png\\\" alt=\\\"ListApp.me\\\">\\n\\n    <h1 class=\\\"title is-size-4 is-size-3-desktop\\\">\\n      Get organized now!\\n    </h1>\\n  </div>\\n\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column is-half is-offset-one-quarter\\\">\\n      <div *ngIf=\\\"error\\\" class=\\\"notification is-danger\\\">\\n        <button (click)=\\\"error = ''\\\" class=\\\"delete\\\"></button>\\n        {{error}}\\n      </div>\\n\\n      <div *ngIf=\\\"success\\\" class=\\\"notification is-primary\\\">\\n        <button (click)=\\\"success = ''\\\" class=\\\"delete\\\"></button>\\n        {{success}}\\n      </div>\\n\\n      <div class=\\\"box\\\">\\n        <div class=\\\"field\\\">\\n          <label class=\\\"label\\\">Email</label>\\n          <div class=\\\"control\\\">\\n            <input\\n              type=\\\"email\\\"\\n              class=\\\"input\\\"\\n              placeholder=\\\"Your email\\\"\\n              [(ngModel)]=\\\"email\\\"\\n            />\\n          </div>\\n          <p *ngIf=\\\"emailError\\\" class=\\\"help is-danger\\\">{{emailError}}</p>\\n        </div>\\n\\n        <div class=\\\"field\\\">\\n          <label class=\\\"label\\\">Password</label>\\n          <div class=\\\"control\\\">\\n              <input\\n                type=\\\"password\\\"\\n                class=\\\"input\\\"\\n                placeholder=\\\"Your password\\\"\\n                [(ngModel)]=\\\"password\\\"\\n              />\\n          </div>\\n          <p *ngIf=\\\"passwordError\\\" class=\\\"help is-danger\\\">{{passwordError}}</p>\\n        </div>\\n\\n        <div class=\\\"buttons\\\">\\n          <button (click)=\\\"validateForm(signUp.bind(this))\\\" class=\\\"button is-info\\\">\\n            <span class=\\\"icon is-small\\\">\\n              <fa-icon [icon]=\\\"faUserPlus\\\"></fa-icon>\\n            </span>\\n            <span>Sign Up</span>\\n          </button>\\n\\n          <div class=\\\"label-or\\\">or</div>\\n\\n          <button (click)=\\\"validateForm(signIn.bind(this))\\\" class=\\\"button\\\">\\n            <span class=\\\"icon is-small\\\">\\n              <fa-icon [icon]=\\\"faSignInAlt\\\"></fa-icon>\\n            </span>\\n            <span>Sign In</span>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</component-page-wrapper>\\n\"","module.exports = \"h1 {\\n  margin-bottom: 15px; }\\n\\n.label-or {\\n  margin-right: 0.5rem;\\n  height: 36px; }\\n\"","import { Component } from '@angular/core';\nimport { faHome, faSignInAlt, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Router } from '@angular/router';\nimport { Menu } from '../../interfaces/menu.interface';\nimport { UserService } from '../../services/user/user.service';\n\n@Component({\n  selector: 'component-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent {\n  menu: Menu[] = [\n    {\n      text: 'Back',\n      icon: faHome,\n      onClick: () => this.router.navigate(['/']),\n      isInverted: true\n    }\n  ];\n  public error;\n  public success;\n  public emailError;\n  public passwordError;\n  public email = '';\n  public password = '';\n  public faSignInAlt = faSignInAlt;\n  public faUserPlus = faUserPlus;\n\n  constructor (\n    private router: Router,\n    private userService: UserService\n  ) {}\n\n  validateEmail (email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  validateForm (callback) {\n    const user = {\n      email: this.email,\n      password: this.password,\n    };\n    let errorCount = 0;\n\n    this.emailError = '';\n    this.passwordError = '';\n\n    if (!this.email) {\n      this.emailError = 'Can\\'t be blank';\n      errorCount++;\n    } else if (!this.validateEmail(this.email)) {\n      this.emailError = 'Email is invalid';\n      this.email = '';\n      errorCount++;\n    }\n\n    if (!this.password) {\n      this.passwordError = 'Can\\'t be blank';\n      errorCount++;\n    } else if (this.password.length < 6) {\n      this.passwordError = 'Password is too short (minimum is 6 characters)';\n      this.password = '';\n      errorCount++;\n    }\n\n    this.success = '';\n    this.error = '';\n\n    if (errorCount === 0) {\n      this.email = '';\n      this.password = '';\n      return callback(user);\n    }\n  }\n\n  signUp (user) {\n    this.userService.create(user)\n      .subscribe(\n        () => { this.success = 'Account created successfully. Please login.'; },\n        response => {\n          const { error } = response;\n          if (error && error.message) {\n            this.error = error.message;\n          } else {\n            this.error = 'An error has occurred. Try again.';\n          }\n        }\n      );\n  }\n\n  signIn (user) {\n    this.userService.login(user)\n      .subscribe(\n        response => {\n          localStorage.setItem('token', response.token);\n          this.router.navigate(['/panel']);\n        },\n        () => { this.error = 'An error has occurred. Try again.'; }\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ComponentsModule } from '../../components/components.module';\nimport { AuthComponent } from './auth.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    FontAwesomeModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  declarations: [AuthComponent],\n  exports: [AuthComponent]\n})\nexport class AuthModule { }\n","module.exports = \"<component-page-wrapper\\n  [menu]=\\\"menu\\\"\\n  [headerOnMobile]=\\\"false\\\">\\n  <div class=\\\"has-text-centered\\\">\\n    <img class=\\\"logo is-hidden-tablet\\\" src=\\\"../../../assets/images/logo-white.png\\\" alt=\\\"Logo\\\">\\n    <h1 class=\\\"title is-size-1-desktop\\\">\\n      <span>Your tasks.</span> Your lists.\\n    </h1>\\n    <h2 class=\\\"subtitle is-size-4-desktop\\\">\\n      <fa-icon [icon]=\\\"faCheck\\\" class=\\\"is-size-7\\\"></fa-icon>\\n      Try a simple way to organize your day.\\n    </h2>\\n\\n    <div class=\\\"is-hidden-tablet\\\">\\n      <a (click)=\\\"goAuth()\\\" class=\\\"button is-info is-inverted\\\">\\n        <span class=\\\"icon\\\">\\n          <fa-icon [icon]=\\\"faSignInAlt\\\"></fa-icon>\\n        </span>\\n        <span>Sign in or Sign up</span>\\n      </a>\\n    </div>\\n  </div>\\n</component-page-wrapper>\\n\"","module.exports = \"h1, h2 {\\n  color: #ffffff; }\\n\\n.title {\\n  padding: 0 15px 15px; }\\n\\n@media screen and (max-width: 768px) {\\n    .title span {\\n      display: block;\\n      line-height: 40px; } }\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faSignInAlt, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { Menu } from '../../interfaces/menu.interface';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n  menu: Menu[] = [\n    {\n      text: 'Sign in or Sign up',\n      icon: faSignInAlt,\n      onClick: () => this.router.navigate(['/auth']),\n      isInverted: true\n    }\n  ];\n  faCheck = faCheck;\n\n  constructor (\n    private router: Router\n  ) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ComponentsModule } from '../../components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    FontAwesomeModule\n  ],\n  declarations: [HomeComponent],\n  exports: [HomeComponent]\n})\nexport class HomeModule { }\n","module.exports = \"<component-page-wrapper\\n  [menu]=\\\"menu\\\">\\n  <h1 class=\\\"title has-text-centered\\\">Your list</h1>\\n\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column is-half is-offset-one-quarter\\\">\\n      <div *ngFor=\\\"let erroItem of error; let i = index\\\" class=\\\"notification is-danger\\\">\\n        <button (click)=\\\"error.splice(i, 1)\\\" class=\\\"delete\\\"></button>\\n        {{erroItem}}\\n      </div>\\n\\n      <div *ngIf=\\\"success\\\" class=\\\"notification is-primary\\\">\\n        <button (click)=\\\"success = ''\\\" class=\\\"delete\\\"></button>\\n        {{success}}\\n      </div>\\n\\n      <div class=\\\"card\\\">\\n        <header class=\\\"card-header\\\">\\n          <p class=\\\"card-header-title\\\">\\n            <input\\n              [(ngModel)]=\\\"theList.title\\\"\\n              placeholder=\\\"Enter a title\\\"\\n              class=\\\"input-edit\\\"\\n              type=\\\"text\\\"\\n            />\\n          </p>\\n        </header>\\n\\n        <div class=\\\"card-content\\\">\\n          <div class=\\\"content\\\">\\n            <p>\\n              <textarea\\n                [(ngModel)]=\\\"theList.text\\\"\\n                placeholder=\\\"Enter a description\\\"\\n                class=\\\"input-edit\\\">\\n              </textarea>\\n            </p>\\n\\n            <div *ngFor=\\\"let item of theList.list; let i = index\\\" class=\\\"field\\\">\\n              <input\\n                class=\\\"is-checkradio is-info\\\"\\n                type=\\\"checkbox\\\"\\n                [checked]=\\\"item.isCheck\\\"\\n                [(ngModel)]=\\\"item.isCheck\\\"\\n                [id]=\\\"'checklist-item-' + i\\\"\\n              />\\n\\n              <label [for]=\\\"'checklist-item-' + i\\\">\\n                <input\\n                  [(ngModel)]=\\\"item.text\\\"\\n                  placeholder=\\\"New item\\\"\\n                  class=\\\"input-edit\\\"\\n                  type=\\\"text\\\"\\n                />\\n              </label>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <footer class=\\\"card-footer\\\">\\n          <input\\n            (keyup.enter)=\\\"addItem()\\\"\\n            [(ngModel)]=\\\"newItem\\\"\\n            class=\\\"input\\\"\\n            type=\\\"text\\\"\\n            placeholder=\\\"New item\\\"\\n          />\\n\\n          <button\\n            (click)=\\\"addItem()\\\"\\n            class=\\\"button\\\">\\n            Add\\n          </button>\\n        </footer>\\n      </div>\\n\\n      <div class=\\\"has-text-centered m-t-20\\\">\\n        <button\\n          (click)=\\\"validateList() && saveOrUpdate()\\\"\\n          class=\\\"button is-link is-inverted\\\">\\n          Save list\\n        </button>\\n\\n        <button\\n          *ngIf=\\\"listId\\\"\\n          (click)=\\\"toggleModalDeleteRequest()\\\"\\n          class=\\\"button is-danger is-inverted is-outlined m-l-10\\\">\\n          Delete list\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</component-page-wrapper>\\n\\n<div class=\\\"modal\\\" [ngClass]=\\\"{'is-active': deleteRequest}\\\">\\n  <div class=\\\"modal-background\\\"></div>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"box has-text-centered\\\">\\n      <h5 class=\\\"title is-5\\\">Are you sure you want to delete?</h5>\\n      <button\\n        (click)=\\\"deleteList()\\\"\\n        class=\\\"button is-danger\\\">\\n        Delete\\n      </button>\\n\\n      <button\\n        (click)=\\\"toggleModalDeleteRequest()\\\"\\n        class=\\\"button is-link is-outlined m-l-10\\\">\\n        Cancel\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".card-footer input,\\n.card-footer .button {\\n  border-radius: 0; }\\n\\n.tag {\\n  padding-left: 0.25rem;\\n  padding-right: 0.25rem;\\n  cursor: pointer; }\\n\\n.input-edit {\\n  border: 0;\\n  background-color: transparent;\\n  width: 92%; }\\n\\ntextarea.input-edit {\\n  width: 100%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { faListOl, faPen, faClock, faCheck, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { ListService } from '../../services/list/list.service';\nimport { IList } from '../../interfaces/list.interface';\nimport { Menu } from '../../interfaces/menu.interface';\n\n@Component({\n  selector: 'component-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n  public menu: Menu[] = [\n    {\n      text: 'My lists',\n      icon: faListOl,\n      onClick: () => this.router.navigate(['/panel']),\n    },\n    {\n      text: 'New list',\n      icon: faPen,\n      onClick: () => this.goToNewList(),\n      isInverted: true\n    }\n  ];\n  public error: string[] = [];\n  public theList: IList;\n  public listId;\n  public newItem: string;\n  public success: string;\n  public deleteRequest: boolean;\n  public faPen = faPen;\n  public faTrash = faTrash;\n  public faClock = faClock;\n  public faCheck = faCheck;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private listService: ListService\n  ) { }\n\n  ngOnInit () {\n    this.getParams();\n    this.getList();\n  }\n\n  goToNewList () {\n    if (this.listId) {\n      this.router.navigate(['/new-list']);\n    } else {\n      this.newItem = undefined;\n      this.listId = undefined;\n      this.setListDefault();\n    }\n  }\n\n  getParams () {\n    this.listId = this.activatedRoute.snapshot.params.id;\n  }\n\n  getList () {\n    if (this.listId) {\n      this.listService.read(this.listId)\n        .subscribe(\n          response => {\n            this.theList = response;\n          },\n          error => { this.error.push('An error has occurred. Try again.'); }\n        );\n    } else {\n      this.setListDefault();\n    }\n  }\n\n  setListDefault () {\n    this.theList = {\n      _id: '',\n      _user: '',\n      title: '',\n      text: '',\n      list: [\n        {\n          text: '',\n          isCheck: false\n        }\n      ]\n    };\n  }\n\n  addItem () {\n    if (this.newItem) {\n      this.theList.list.push({\n        isCheck: false,\n        text: this.newItem\n      });\n      this.newItem = '';\n    }\n  }\n\n  validateList () {\n    this.error = [];\n    if (!this.theList.title) {\n      this.error.push('The title is required.');\n    }\n\n    if (this.theList.list.length === 1 && this.theList.list[0].text === '') {\n      this.error.push('Please enter at least one item.');\n    }\n\n    return !this.error.length;\n  }\n\n  saveOrUpdate () {\n    if (!this.listId) {\n      this.createList();\n    } else {\n      this.saveList();\n    }\n  }\n\n  createList () {\n    this.listService.create(this.theList)\n      .subscribe(\n        response => {\n          this.success = 'List created successfully.';\n          this.theList = response;\n          this.listId = response._id;\n        },\n        error => { this.error.push('An error has occurred. Try again.'); }\n      );\n  }\n\n  saveList () {\n    this.listService.update(this.listId, this.theList)\n      .subscribe(\n        response => {\n          this.success = 'List edited successfully.';\n          this.theList = response;\n        },\n        error => { this.error.push('An error has occurred. Try again.'); }\n      );\n  }\n\n  toggleModalDeleteRequest () {\n    this.deleteRequest = !this.deleteRequest;\n  }\n\n  deleteList () {\n    this.listService.delete(this.listId)\n      .subscribe(\n        response => { this.router.navigate(['/panel']); },\n        error => { this.error.push('An error has occurred. Try again.'); }\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { ListComponent } from './list.component';\nimport { ComponentsModule } from '../../components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    FontAwesomeModule,\n    FormsModule\n  ],\n  declarations: [ListComponent]\n})\nexport class ListModule { }\n","module.exports = \"<component-page-wrapper\\n  [menu]=\\\"menu\\\">\\n  <h1 class=\\\"title has-text-centered\\\">Your lists</h1>\\n\\n  <div *ngIf=\\\"error\\\" class=\\\"notification is-danger\\\">\\n    <button (click)=\\\"error = ''\\\" class=\\\"delete\\\"></button>\\n    {{error}}\\n  </div>\\n\\n  <div class=\\\"columns is-multiline\\\">\\n    <div *ngFor=\\\"let item of lists\\\" class=\\\"column is-4\\\">\\n      <div class=\\\"card\\\">\\n        <header class=\\\"card-header\\\">\\n          <p class=\\\"card-header-title\\\">\\n            {{item.title}}\\n          </p>\\n          <a class=\\\"card-header-icon\\\" aria-label=\\\"more options\\\">\\n            <span class=\\\"icon\\\">\\n              <fa-icon [icon]=\\\"faClock\\\"></fa-icon>\\n            </span>\\n          </a>\\n        </header>\\n\\n        <div class=\\\"card-content\\\">\\n          <div class=\\\"content\\\">\\n            <div *ngIf=\\\"item.list.length\\\">\\n              <div *ngFor=\\\"let subItem of item.list\\\" class=\\\"field\\\">\\n                <input\\n                  disabled=\\\"disabled\\\"\\n                  [checked]=\\\"subItem.isCheck\\\"\\n                  class=\\\"is-checkradio is-info\\\"type=\\\"checkbox\\\"\\n                />\\n                <label>{{subItem.text}}</label>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <footer class=\\\"card-footer\\\">\\n          <a (click)=\\\"openList(item._id)\\\" class=\\\"card-footer-item\\\">View more</a>\\n          <a (click)=\\\"openList(item._id)\\\" class=\\\"card-footer-item\\\">Edit</a>\\n        </footer>\\n      </div>\\n    </div>\\n  </div>\\n</component-page-wrapper>\\n\"","module.exports = \".hero {\\n  background: url('bg.jpg') repeat center; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faListOl, faPen, faClock, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { Menu } from '../../interfaces/menu.interface';\nimport { ListService } from '../../services/list/list.service';\nimport { IList } from '../../interfaces/list.interface';\n\n@Component({\n  selector: 'component-panel',\n  templateUrl: './panel.component.html',\n  styleUrls: ['./panel.component.scss']\n})\nexport class PanelComponent implements OnInit {\n  menu: Menu[] = [\n    {\n      text: 'My lists',\n      icon: faListOl,\n      onClick: () => this.getLists(),\n    },\n    {\n      text: 'New list',\n      icon: faPen,\n      onClick: () => this.router.navigate(['/new-list']),\n      isInverted: true\n    }\n  ];\n  public lists: IList[];\n  public error;\n  public faListOl = faListOl;\n  public faClock = faClock;\n  public faCheck = faCheck;\n\n  constructor(\n    private router: Router,\n    private listService: ListService\n  ) { }\n\n  ngOnInit() {\n    this.getLists();\n  }\n\n  getLists () {\n    this.listService.getAll()\n      .subscribe(\n        response => { this.lists = response; },\n        error => { this.error = 'An error has occurred. Try again.'; }\n      );\n  }\n\n  openList (listId) {\n    this.router.navigate(['/list', listId]);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ComponentsModule } from '../../components/components.module';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { PanelComponent } from './panel.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsModule,\n    FontAwesomeModule\n  ],\n  declarations: [PanelComponent]\n})\nexport class PanelModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ) { }\n\n  canActivate(): boolean {\n    if (!this.authService.isAuthenticated()) {\n      this.router.navigate(['']);\n      return false;\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(\n    public jwtHelper: JwtHelperService\n  ) { }\n\n  isAuthenticated(): boolean {\n    const token = localStorage.getItem('token');\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { IList } from '../../interfaces/list.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListService {\n  private serverUrl = environment.serverUrl;\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  getAll () {\n    const urlRequest = `${this.serverUrl}/list`;\n    return this.httpClient.get<IList[]>(urlRequest);\n  }\n\n  create (theList: IList) {\n    const urlRequest = `${this.serverUrl}/list`;\n    return this.httpClient.post<IList>(urlRequest, theList);\n  }\n\n  read (listId: string) {\n    const urlRequest = `${this.serverUrl}/list/${listId}`;\n    return this.httpClient.get<IList>(urlRequest);\n  }\n\n  update (listId: string, theList: IList) {\n    const urlRequest = `${this.serverUrl}/list/${listId}`;\n    return this.httpClient.put<IList>(urlRequest, theList);\n  }\n\n  delete (listId: string) {\n    const urlRequest = `${this.serverUrl}/list/${listId}`;\n    return this.httpClient.delete<IList>(urlRequest);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IUser } from '../../interfaces/user.interface';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private serverUrl = environment.serverUrl;\n\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  create (user: IUser) {\n    const urlRequest = `${this.serverUrl}/user`;\n    return this.httpClient.post<IUser>(urlRequest, user);\n  }\n\n  login (user: IUser) {\n    const urlRequest = `${this.serverUrl}/user/login`;\n    return this.httpClient.post<{ auth: boolean, token: string }>(urlRequest, user);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl: 'http://localhost:3000'\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}